p3 <- ggplot(lu_plot, aes(x = lu_degree, y = mean_vp)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE, color = "blue", fill = "lightblue", linewidth = 1.5, level = 0.95) +
labs(x = "Degree Centrality") +
theme_classic() +
theme(axis.title = element_text(size = 15),
axis.title.y = element_blank()) +
ggtitle("c) Large-bodied Undergrowth Flocks") +
scale_y_continuous(expand = c(0.05, 0.05), limits = y_limits) + xlim(x_limits)
# Arrange the plots vertically
library(patchwork)
# Arrange the plots vertically
p1 + p2 + p3 + plot_layout(ncol = 1)
#==========================================================================================================================
# Vocal Participation vs. Average Group Size Graph -- GLM
propensity.table2 = merge(propensity.table2, number_of_flocks, by = "species_ID")
propensity.table2 = propensity.table2 %>% mutate(avg_group_size = inside_sum/number_of_flocks)
#Remove outlier
filtered_table <- propensity.table2 %>% filter(species_ID != "psittiparus_gularis")
# Harish code for the same plot, binomial instead of gamma
ggplot(data = filtered_table, aes(x = avg_group_size, y = mean_vp)) +
geom_smooth(method = "glm", method.args = list(family = "binomial"), se = TRUE,
linewidth = 1.8, colour = "#02607A", fill = "#87CEEB") +
geom_point(size = 2.2, shape = 21, fill = "#0387AD", colour = "#0387AD", stroke = 1.2, alpha = .6) +
theme_classic() +
labs(x = "Mean Intraspecific Group Size", y = "Mean Vocal Participation") +
theme(axis.title = element_text(size = 18)) +
scale_y_continuous(limits = c(-0.05, 1.05)) +
scale_x_continuous(breaks = c(0:9))
#==========================================================================================================================
# Find slope, intercept, p values
# Fit the binomial regression model
binomial_groupsize <- glm(mean_vp ~ avg_group_size, data = filtered_table, family = binomial)
# Summarize the model
summary(binomial_groupsize)
# Extract coefficients (slope and intercept)
groupsize_coefficients <- summary(binomial_groupsize)$coefficients
# Intercept (linear/odds ratio)
exp(groupsize_coefficients[1, 1])
# Slope (linear/odds ratio)
exp(groupsize_coefficients[2, 1])
# P-values
groupsize_coefficients[, 4]
#==========================================================================================================================
#==========================================================================================================================
#==========================================================================================================================
#Beta regression instead of Binomial
filtered_table$mean_vp = filtered_table$mean_vp + 0.0000001
beta_groupsize <- glmmTMB(mean_vp ~ avg_group_size, data = filtered_table, family = beta_family(link = "logit"))
predict_groupsize <- predict(beta_groupsize, type = "response", se.fit = TRUE)
ggplot(filtered_table, aes(x = avg_group_size, y = mean_vp)) +
geom_point(size = 2.2, shape = 21, fill = "#0387AD", colour = "#0387AD", stroke = 1.2, alpha = .6) +
geom_line(aes(y = fitted(beta_groupsize)), color = '#02607A', linewidth = 1.5) +
geom_ribbon(aes(ymin = predict_groupsize$fit - 1.96 * predict_groupsize$se.fit,
ymax = predict_groupsize$fit + 1.96 * predict_groupsize$se.fit),
alpha = 0.3, fill = "#0387AD") +
labs(x = "Mean Intraspecific Group Size", y = "Mean Vocal Participation") +
theme_classic() +
theme(plot.title = element_text(size=10), axis.title = element_text(size = 20)) +
scale_x_continuous(breaks = c(0:9))
# Coefficients
coefficients_groupsize <- summary(beta_groupsize)$coefficients$cond
intercept_groupsize_logit <- coefficients_groupsize["(Intercept)", "Estimate"]
slope_groupsize_logit <- coefficients_groupsize["avg_group_size", "Estimate"]
plogis(0.33888-0.06817)
# Transform the intercept and slope for groupsize
intercept_groupsize <- inv_logit(intercept_groupsize_logit)
slope_groupsize <- inv_logit(intercept_groupsize_logit + slope_groupsize_logit) - inv_logit(intercept_groupsize_logit)
# Print the results
cat("Intercept on the linear scale:", intercept_groupsize, "\n")
cat("Slope on the linear scale:", slope_groupsize, "\n")
# Fit a GLM with a binomial distribution -- VP vs. Avg. Group Size
glm_fit_groupsize <- glm(mean_vp ~ avg_group_size, family = "binomial", data = filtered_table)
summary(glm_fit_groupsize) # Statistically significant
hist(resid(glm_fit_groupsize)) # Good fit
#==========================================================================================================================
#==========================================================================================================================
#==========================================================================================================================
# Fit a GLM with a binomial distribution -- VP vs. Leadership p/n graph
ggplot(data = weighted_vocal_table2, aes(x = lead_proportion, y = mean_vp)) +
geom_smooth(method = "glm", method.args = list(family = "binomial"),
se = TRUE, colour = "#02607A", fill = "#87CEEB", linewidth = 1.8) +
geom_point(size = 2.2, shape = 21, fill = "#0387AD", colour = "#0387AD", stroke = 1.2, alpha = .6) +
theme_classic() +
labs(x = "Proportion of Flocks Led", y = "Mean Vocal Participation") +
theme(axis.title = element_text(size = 18))
# Fit a GLM with a beta distribution -- VP vs. Leadership p/n graph
weighted_vocal_table2$mean_vp = weighted_vocal_table2$mean_vp + 0.0000001
beta_leadership = glmmTMB(mean_vp ~ lead_proportion, data = weighted_vocal_table2, family = beta_family(link = "logit"))
predict_leadership <- predict(beta_leadership, type = "response", se.fit = TRUE)
ggplot(weighted_vocal_table2, aes(x = lead_proportion, y = mean_vp)) +
geom_point(size = 2.2, shape = 21, fill = "#0387AD", colour = "#0387AD", stroke = 1.2, alpha = .6) +
geom_line(aes(y = fitted(beta_leadership)), color = '#02607A', linewidth = 1.5) +
geom_ribbon(aes(ymin = predict_leadership$fit - 1.96 * predict_leadership$se.fit,
ymax = predict_leadership$fit + 1.96 * predict_leadership$se.fit),
alpha = 0.3, fill = "#0387AD") +
labs(x = "Proportion of Flocks Led", y = "Mean Vocal Participation") +
theme_classic() +
theme(plot.title = element_text(size=10), axis.title = element_text(size = 20))
#Coefficients
coefficients_lead <- summary(beta_leadership)$coefficients$cond
intercept_lead_logit <- coefficients_lead["(Intercept)", "Estimate"]
slope_lead_logit <- coefficients_lead["lead_proportion", "Estimate"]
plogis(6.0508-1.1508)
# Transform the intercept and slope for s flocks
intercept_lead <- inv_logit(intercept_lead_logit)
slope_lead <- inv_logit(intercept_lead_logit + slope_lead_logit) - inv_logit(intercept_lead_logit)
# Print the results
cat("Intercept on the linear scale:", intercept_lead, "\n")
cat("Slope on the linear scale:", slope_lead, "\n")
#==========================================================================================================================
# Find slope, intercept, p values
# Fit the binomial regression model
binomial_leadership <- glm(mean_vp ~ lead_proportion, data = weighted_vocal_table2, family = binomial)
# Summarize the model
summary(binomial_leadership)
# Extract coefficients (slope and intercept)
leadership_coefficients <- summary(binomial_leadership)$coefficients
# Intercept (linear/odds ratio)
exp(leadership_coefficients[1, 1])
# Slope (linear/odds ratio)
exp(scale(leadership_coefficients[2, 1]))
# P-values
leadership_coefficients[, 4]
#==========================================================================================================================
lc_plot$mean_vp = lc_plot$mean_vp + 0.0000001
# Use beta GLM, logistic
library(betareg)
library(glmmTMB)
# Fit the beta regression model
beta_s <- glmmTMB(mean_vp ~ s_degree, data = s_plot, family = beta_family(link = "logit"))
beta_lc <- glmmTMB(mean_vp ~ lc_degree, data = lc_plot, family = beta_family(link = "logit"))
beta_lu <- glmmTMB(mean_vp ~ lu_degree, data = lu_plot, family = beta_family(link = "logit"))
summary(beta_s) # *
summary(beta_lc) #
summary(beta_lu) # *
hist(resid(beta_s))
hist(resid(beta_lc))
hist(resid(beta_lu))
# Get predicted values and standard errors
predict_s <- predict(beta_s, type = "response", se.fit = TRUE)
predict_lc <- predict(beta_lc, type = "response", se.fit = TRUE)
predict_lu <- predict(beta_lu, type = "response", se.fit = TRUE)
# Plot with ggplot2 --- FITTED ERRORBAR SHADING TO ALL!!!!!!!!!!!!!!!!!!!!!
aa = ggplot(s_plot, aes(x = s_degree, y = mean_vp)) +
geom_point(size = 3, shape = 21, fill = "#FF7F50", colour = "#CD5B45", stroke = 1.2, alpha = .7) +
geom_line(aes(y = fitted(beta_s)), colour = "#CD5B45", linewidth = 1.8) +
geom_ribbon(aes(ymin = predict_s$fit - 1.96 * predict_s$se.fit,
ymax = predict_s$fit + 1.96 * predict_s$se.fit),
alpha = 0.3, fill = "#FF7F50") +
labs(x = NULL, y = "Mean Vocal Participation") +
theme_classic() +
theme(axis.title = element_text(size = 15),
axis.title.x = element_blank(), plot.title = element_text(size=10)) +
ggtitle("a) Small-bodied Flocks") +
scale_y_continuous(expand = c(0.05, 0.05), limits = y_limits) +
xlim(x_limits)
bb = ggplot(lc_plot, aes(x = lc_degree, y = mean_vp)) +
geom_point(size = 3, shape = 21, fill = "#02a890", colour = "#027d68", stroke = 1.2, alpha = .7) +
geom_line(aes(y = fitted(beta_lc)), colour = "#027d68", linewidth = 1.8) +
geom_ribbon(aes(ymin = predict_lc$fit - 1.96 * predict_lc$se.fit,
ymax = predict_lc$fit + 1.96 * predict_lc$se.fit),
alpha = 0.3, fill = "#02a890") +
labs(x = NULL, y = NULL) +
theme_classic() +
theme(axis.title = element_text(size = 15),
axis.title.x = element_blank(), plot.title = element_text(size=10)) +
ggtitle("b) Large-bodied Canopy Flocks") +
scale_y_continuous(expand = c(0.05, 0.05), limits = y_limits) +
xlim(x_limits)
cc = ggplot(lu_plot, aes(x = lu_degree, y = mean_vp)) +
geom_point(size = 3, shape = 21, fill = "#87CEEB", colour = "#4682B4", stroke = 1.2, alpha = .7) +
geom_line(aes(y = fitted(beta_lu)), colour = "#4682B4", linewidth = 1.8) +
geom_ribbon(aes(ymin = predict_lu$fit - 1.96 * predict_lu$se.fit,
ymax = predict_lu$fit + 1.96 * predict_lu$se.fit),
alpha = 0.3, fill = "#87CEEB") +
labs(x = 'Degree Centrality', y = NULL) +
theme_classic() +
theme(axis.title = element_text(size = 15),
axis.title.y = element_blank(), plot.title = element_text(size=10)) +
ggtitle("c) Large-bodied Undergrowth Flocks") +
scale_y_continuous(expand = c(0.05, 0.05), limits = y_limits) +
xlim(x_limits)
aa + bb + cc + plot_layout(ncol = 1)
aa + bb + plot_layout(ncol = 2) + plot_annotation(caption = "Degree Centrality",
theme = theme(plot.caption = element_text(hjust = 0.5, size=15)))
summary(beta_s)
#==========================================================================================================================
inv_logit <- function(x) exp(x) / (1 + exp(x))
# Find coefficients on the linear scale:
coefficients_s <- summary(beta_s)$coefficients$cond
intercept_s_logit <- coefficients_s["(Intercept)", "Estimate"]
slope_s_logit <- coefficients_s["s_degree", "Estimate"]
# Transform the intercept and slope for s flocks
intercept_s <- inv_logit(intercept_s_logit)
slope_s <- inv_logit(intercept_s_logit + slope_s_logit) - inv_logit(intercept_s_logit)
# Print the results
cat("Intercept on the linear scale:", intercept_s, "\n")
cat("Slope on the linear scale:", slope_s, "\n")
#==========================================================================================================================
# LC flocks
coefficients_lc <- summary(beta_lc)$coefficients$cond
intercept_lc_logit <- coefficients_lc["(Intercept)", "Estimate"]
slope_lc_logit <- coefficients_lc["lc_degree", "Estimate"]
# Transform the intercept and slope for lc flocks
intercept_lc <- inv_logit(intercept_lc_logit)
slope_lc <- inv_logit(intercept_lc_logit + slope_lc_logit) - inv_logit(intercept_lc_logit)
# Print the results
cat("Intercept on the linear scale:", intercept_lc, "\n")
cat("Slope on the linear scale:", slope_lc, "\n")
#==========================================================================================================================
# LU flocks
coefficients_lu <- summary(beta_lu)$coefficients$cond
intercept_lu_logit <- coefficients_lu["(Intercept)", "Estimate"]
slope_lu_logit <- coefficients_lu["lu_degree", "Estimate"]
# Transform the intercept and slope for lu flocks
intercept_lu <- inv_logit(intercept_lu_logit)
slope_lu <- inv_logit(intercept_lu_logit + slope_lu_logit) - inv_logit(intercept_lu_logit)
# Print the results
cat("Intercept on the linear scale:", intercept_lu, "\n")
cat("Slope on the linear scale:", slope_lu, "\n")
#==========================================================================================================================
# Diversity across flock types boxplots
species_per_flock <- weighted_vocal_table %>%
group_by(flock_ID, flocktype) %>%
summarise(number_of_species = n_distinct(species_ID))
# Convert flocktype to a factor and specify the order of levels
species_per_flock$flocktype <- factor(species_per_flock$flocktype,
levels = c("S", "LC", "LU"),
labels = c("Small-bodied\nFlocks",
"Large-bodied\nCanopy Flocks", "Large-bodied\nUndergrowth Flocks"))
# Generate the box-violin plot
ggplot(species_per_flock, aes(x = flocktype, y = number_of_species, fill = flocktype)) +
geom_boxplot(width = 0.6, position = position_dodge(0.9)) +  # Increase the width of the box plot
geom_violin(trim = FALSE, alpha = 0.3, width = 0.6) +    # Decrease the width of the violin plot
labs(x = "", y = "Number of Species") +
theme_classic() +
theme(axis.title = element_text(size = 18),
axis.text.x = element_text(size = 12),  # Increase the size of x-axis text
legend.position = "none") +
scale_fill_manual(values = c("Small-bodied\nFlocks" = "#CD5B45",
"Large-bodied\nCanopy Flocks" = "#027d68",
"Large-bodied\nUndergrowth Flocks" = "#4682B4"))
species_per_flock %>% group_by(flocktype) %>% summarize(mean(number_of_species))
#==========================================================================================================================
# Body mass graphs
bodymasses = read.csv("body_mass_table.csv", header = T)
bodymass_table = merge(weighted_vocal_table, bodymasses, all.x = T)
bodymass_table = bodymass_table %>% group_by(flock_ID, flocktype) %>% summarise(mean_bodymass = mean(bodymass))
bodymass_table$flocktype <- factor(bodymass_table$flocktype,
levels = c("S", "LC", "LU"),
labels = c("Small-bodied\nFlocks",
"Large-bodied\nCanopy Flocks", "Large-bodied\nUndergrowth Flocks"))
ggplot(bodymass_table, aes(x = flocktype, y = mean_bodymass, fill = flocktype)) +
geom_boxplot(width = 0.6, position = position_dodge(0.9)) +  # Increase the width of the box plot
geom_violin(trim = FALSE, alpha = 0.3, width = 0.6) +    # Decrease the width of the violin plot
labs(x = "", y = "Mean Body Mass (g)") +
theme_classic() +
theme(axis.title = element_text(size = 16),
axis.text.x = element_text(size = 12),  # Increase the size of x-axis text
legend.position = "none") +
scale_fill_manual(values = c("Small-bodied\nFlocks" = "#CD5B45",
"Large-bodied\nCanopy Flocks" = "#027d68",
"Large-bodied\nUndergrowth Flocks" = "#4682B4"))
bodymass_table %>% group_by(flocktype) %>% summarise(mean_bm = mean(mean_bodymass))
#==========================================================================================================================
# Fit the beta regression model
beta_sp <- glmmTMB(mean_vp ~ percent_flocks, data = s_plot, family = beta_family(link = "logit"))
beta_lcp <- glmmTMB(mean_vp ~ percent_flocks, data = lc_plot, family = beta_family(link = "logit"))
beta_lup <- glmmTMB(mean_vp ~ percent_flocks, data = lu_plot, family = beta_family(link = "logit"))
summary(beta_sp) # *
summary(beta_lcp) #
summary(beta_lup) # *
plogis(1.813)
hist(resid(beta_sp))
hist(resid(beta_lcp))
hist(resid(beta_lup))
# Get predicted values and standard errors
predict_sp <- predict(beta_sp, type = "response", se.fit = TRUE)
predict_lcp <- predict(beta_lcp, type = "response", se.fit = TRUE)
predict_lup <- predict(beta_lup, type = "response", se.fit = TRUE)
# Plot with ggplot2 --- FITTED ERRORBAR SHADING TO ALL!!!!!!!!!!!!!!!!!!!!!
y_limits2 <- c(-.12, 1.05)
ap = ggplot(s_plot, aes(x = percent_flocks, y = mean_vp)) +
geom_point(size = 3, shape = 21, fill = "#FF7F50", colour = "#CD5B45", stroke = 1.2, alpha = .7) +
geom_line(aes(y = fitted(beta_sp)), colour = "#CD5B45", linewidth = 1.8) +
geom_ribbon(aes(ymin = predict_sp$fit - 1.96 * predict_sp$se.fit,
ymax = predict_sp$fit + 1.96 * predict_sp$se.fit),
alpha = 0.3, fill = "#FF7F50") +
labs(x = NULL, y = "Mean Vocal Participation") +
theme_classic() +
theme(axis.title = element_text(size = 15),
axis.title.x = element_blank(), plot.title = element_text(size=10)) +
ggtitle("a) Small-bodied Flocks") +
scale_y_continuous(expand = c(0.05, 0.05), limits = y_limits2) +
scale_x_continuous(limits = c(0,1))
# Plot with bb colors
bp = ggplot(lc_plot, aes(x = percent_flocks, y = mean_vp)) +
geom_point(size = 3, shape = 21, fill = "#02a890", colour = "#027d68", stroke = 1.2, alpha = .7) +
geom_line(aes(y = fitted(beta_lcp)), colour = "#027d68", linewidth = 1.8) +
geom_ribbon(aes(ymin = predict_lcp$fit - 1.96 * predict_lcp$se.fit,
ymax = predict_lcp$fit + 1.96 * predict_lcp$se.fit),
alpha = 0.3, fill = "#02a890") +
labs(x = NULL, y = NULL) +
theme_classic() +
theme(axis.title = element_text(size = 15),
axis.title.x = element_blank(), plot.title = element_text(size=10)) +
ggtitle("b) Large-bodied Canopy Flocks") +
scale_y_continuous(expand = c(0.05, 0.05), limits = y_limits2) +
scale_x_continuous(limits = c(0,1))
# Plot with cc colors
cp = ggplot(lu_plot, aes(x = percent_flocks, y = mean_vp)) +
geom_point(size = 3, shape = 21, fill = "#87CEEB", colour = "#4682B4", stroke = 1.2, alpha = .7) +
geom_line(aes(y = fitted(beta_lup)), colour = "#4682B4", linewidth = 1.8) +
geom_ribbon(aes(ymin = predict_lup$fit - 1.96 * predict_lup$se.fit,
ymax = predict_lup$fit + 1.96 * predict_lup$se.fit),
alpha = 0.3, fill = "#87CEEB") +
labs(x = 'Proportion of Flocks', y = NULL) +
theme_classic() +
theme(axis.title = element_text(size = 15),
axis.title.y = element_blank(), plot.title = element_text(size=10)) +
ggtitle("c) Large-bodied Undergrowth Flocks") +
scale_y_continuous(expand = c(0.05, 0.05), limits = y_limits2) +
scale_x_continuous(limits = c(0,1))
ap + bp + cp + plot_layout(ncol = 1)
ap + bp + plot_layout(ncol = 2) + plot_annotation(caption = "Proportion in Flocks",
theme = theme(plot.caption = element_text(hjust = 0.5, size=15)))
summary(beta_lcp)
plogis(3.5779+1.9739)
#==========================================================================================================================
inv_logit <- function(x) exp(x) / (1 + exp(x))
# Find coefficients on the linear scale:
coefficients_sp <- summary(beta_sp)$coefficients$cond
intercept_sp_logit <- coefficients_sp["(Intercept)", "Estimate"]
slope_sp_logit <- coefficients_sp["percent_flocks", "Estimate"]
# Transform the intercept and slope for sp flocks
intercept_sp <- inv_logit(intercept_sp_logit)
slope_sp <- inv_logit(intercept_sp_logit + slope_sp_logit) - inv_logit(intercept_sp_logit)
# Print the results
summary(beta_sp)
cat("Intercept on the linear scale:", intercept_sp, "\n")
cat("Slope on the linear scale:", slope_sp, "\n")
#==========================================================================================================================
# LCP flocks
coefficients_lcp <- summary(beta_lcp)$coefficients$cond
intercept_lcp_logit <- coefficients_lcp["(Intercept)", "Estimate"]
slope_lcp_logit <- coefficients_lcp["percent_flocks", "Estimate"]
# Transform the intercept and slope for lcp flocks
intercept_lcp <- inv_logit(intercept_lcp_logit)
slope_lcp <- inv_logit(intercept_lcp_logit + slope_lcp_logit) - inv_logit(intercept_lcp_logit)
# Print the results
summary(beta_lcp)
cat("Intercept on the linear scale:", intercept_lcp, "\n")
cat("Slope on the linear scale:", slope_lcp, "\n")
#==========================================================================================================================
# LUP flocks
coefficients_lup <- summary(beta_lup)$coefficients$cond
intercept_lup_logit <- coefficients_lup["(Intercept)", "Estimate"]
slope_lup_logit <- coefficients_lup["percent_flocks", "Estimate"]
# Transform the intercept and slope for lup flocks
intercept_lup <- inv_logit(intercept_lup_logit)
slope_lup <- inv_logit(intercept_lup_logit + slope_lup_logit) - inv_logit(intercept_lup_logit)
# Print the results
summary(beta_lup)
cat("Intercept on the linear scale:", intercept_lup, "\n")
cat("Slope on the linear scale:", slope_lup, "\n")
#==========================================================================================================================
# Tables for supplementary figures
write.csv(s_plot, file= "s_plot_table.csv")
write.csv(lc_plot, file= "lc_plot_table.csv")
write.csv(lu_plot, file= "lu_plot_table.csv")
#==========================================================================================================================
# Degree centrality vs. proportion of flocks
# ggplot(s_plot, aes(x = percent_flocks, y = s_degree)) +
#   geom_point(size = 3, shape = 21, fill = "#FF7F50", colour = "#CD5B45", stroke = 1.2, alpha = .7) +
#   geom_smooth(method = "lm", colour = "#CD5B45", fill = "#FF7F50", alpha = 0.3, se = TRUE, size = 1.8) +
#   labs(x = NULL, y = NULL) +
#   theme_classic() +
#   theme(plot.title = element_text(size=10)) +
#   ggtitle("a) Small-bodied Flocks") +
#   scale_y_continuous(limits = c(0.4,1)) +
#   scale_x_continuous(limits = c(0, 1))
#
#
# ggplot(lc_plot, aes(x = percent_flocks, y = lc_degree)) +
#   geom_point(size = 3, shape = 21, fill = "#02a890", colour = "#027d68", stroke = 1.2, alpha = .7) +
#   geom_smooth(method = "lm", colour = "#027d68", fill = "#02a890", alpha = 0.3, se = TRUE, size = 1.8) +
#   labs(x = NULL, y = "Degree Centrality") +
#   theme_classic() +
#   theme(axis.title = element_text(size = 15),
#         axis.title.x = element_blank(), plot.title = element_text(size=10)) +
#   ggtitle("b) Large-bodied Canopy Flocks") +
#   scale_y_continuous(limits = c(0.4,1)) +
#   scale_x_continuous(limits = c(0,1))
#
#
# ggplot(lu_plot, aes(x = percent_flocks, y = lu_degree)) +
#   geom_point(size = 3, shape = 21, fill = "#87CEEB", colour = "#4682B4", stroke = 1.2, alpha = .7) +
#   geom_smooth(method = "lm", colour = "#4682B4", fill = "#87CEEB", alpha = 0.3, se = TRUE, size = 1.8) +
#   labs(x = 'Proportion of Flocks', y = NULL) +
#   theme_classic() +
#   theme(axis.title = element_text(size = 15),
#         axis.title.y = element_blank(), plot.title = element_text(size=10)) +
#   ggtitle("c) Large-bodied Undergrowth Flocks") +
#   scale_y_continuous(limits = c(0.4,1)) +
#   scale_x_continuous(limits = c(0,1))
#==========================================================================================================================
#
# library(car)
# s_plot <- s_plot %>%
#   left_join(select(weighted_vocal_table2, species_ID, lead_proportion), by = "species_ID")
#
# s_plot2 = s_plot %>% select(s_degree, percent_flocks, lead_proportion)
# s_plot2 = scale(s_plot2)
#
# smodel = lm(mean_vp ~ s_degree + percent_flocks + lead_proportion, data = s_plot)
#
library(car)
vif(smodel)
# s_pca = prcomp(s_plot2, center = TRUE, scale. = TRUE)
# summary(s_pca)
# glmmTMB(mean_vp ~ s_pca$x[,1] + s_pca$x[,2], data = s_plot, family = beta_family(link = "logit"))
# glmmTMB(mean_vp ~ s_pca$x[,1] + s_pca$x[,3], data = s_plot, family = beta_family(link = "logit"))
# glmmTMB(mean_vp ~ s_pca$x[,2] + s_pca$x[,3], data = s_plot, family = beta_family(link = "logit"))
#
# glmmTMB(mean_vp ~ s_pca$x[,1], data = s_plot, family = beta_family(link = "logit"))
# glmmTMB(mean_vp ~ s_pca$x[,2], data = s_plot, family = beta_family(link = "logit"))
# glmmTMB(mean_vp ~ s_pca$x[,3], data = s_plot, family = beta_family(link = "logit"))
#
# glmmTMB(mean_vp ~ s_pca$x[,1] * s_pca$x[,2] * s_pca$x[,3], data = s_plot, family = beta_family(link = "logit"))
# S flocks
s_plot <- s_plot %>%
left_join(select(weighted_vocal_table2, species_ID, lead_proportion), by = "species_ID")
s_plot <- s_plot %>%
left_join(select(filtered_table, species_ID, avg_group_size), by = "species_ID")
glmmTMB(mean_vp ~ s_degree + avg_group_size + lead_proportion, data = s_plot, family = beta_family(link = "logit")) #--22.24856
glmmTMB(mean_vp ~ s_degree * avg_group_size * lead_proportion, data = s_plot, family = beta_family(link = "logit")) #--21.59023
glmmTMB(mean_vp ~ s_degree + avg_group_size, data = s_plot, family = beta_family(link = "logit")) #--20.72585
glmmTMB(mean_vp ~ avg_group_size + lead_proportion, data = s_plot, family = beta_family(link = "logit")) #--15.18746
glmmTMB(mean_vp ~ s_degree + lead_proportion, data = s_plot, family = beta_family(link = "logit")) #--23.48310
glmmTMB(mean_vp ~ s_degree * avg_group_size, data = s_plot, family = beta_family(link = "logit")) #--18.77546
glmmTMB(mean_vp ~ avg_group_size * lead_proportion, data = s_plot, family = beta_family(link = "logit")) #--16.40909
glmmTMB(mean_vp ~ s_degree * lead_proportion, data = s_plot, family = beta_family(link = "logit")) #--21.49121
glmmTMB(mean_vp ~ s_degree, data = s_plot, family = beta_family(link = "logit")) #--11.5654
glmmTMB(mean_vp ~ avg_group_size, data = s_plot, family = beta_family(link = "logit")) #--11.66446
glmmTMB(mean_vp ~ lead_proportion, data = s_plot, family = beta_family(link = "logit")) #--17.13762
# LC flocks
lc_plot <- lc_plot %>%
left_join(select(weighted_vocal_table2, species_ID, lead_proportion), by = "species_ID")
lc_plot <- lc_plot %>%
left_join(select(filtered_table, species_ID, avg_group_size), by = "species_ID")
glmmTMB(mean_vp ~ lc_degree + avg_group_size + lead_proportion, data = lc_plot, family = beta_family(link = "logit")) #--17.97094
glmmTMB(mean_vp ~ lc_degree * avg_group_size * lead_proportion, data = lc_plot, family = beta_family(link = "logit")) #--16.78376
glmmTMB(mean_vp ~ lc_degree + avg_group_size, data = lc_plot, family = beta_family(link = "logit")) #--19.77086
glmmTMB(mean_vp ~ avg_group_size + lead_proportion, data = lc_plot, family = beta_family(link = "logit")) #--12.86252
glmmTMB(mean_vp ~ lc_degree + lead_proportion, data = lc_plot, family = beta_family(link = "logit")) #--15.83052
glmmTMB(mean_vp ~ lc_degree * avg_group_size, data = lc_plot, family = beta_family(link = "logit")) #--18.78845
glmmTMB(mean_vp ~ avg_group_size * lead_proportion, data = lc_plot, family = beta_family(link = "logit")) #--17.10235
glmmTMB(mean_vp ~ lc_degree * lead_proportion, data = lc_plot, family = beta_family(link = "logit")) #--14.23428
glmmTMB(mean_vp ~ lc_degree, data = lc_plot, family = beta_family(link = "logit")) #--8.10534
glmmTMB(mean_vp ~ avg_group_size, data = lc_plot, family = beta_family(link = "logit")) #--13.85661
glmmTMB(mean_vp ~ lead_proportion, data = lc_plot, family = beta_family(link = "logit")) #--13.90715
# LU Flocks
lu_plot <- lu_plot %>%
left_join(select(weighted_vocal_table2, species_ID, lead_proportion), by = "species_ID")
glmmTMB(mean_vp ~ lu_degree + percent_flocks + lead_proportion, data = lu_plot, family = beta_family(link = "logit")) #-5.91411
glmmTMB(mean_vp ~ lu_degree * percent_flocks * lead_proportion, data = lu_plot, family = beta_family(link = "logit")) #-14.36937
glmmTMB(mean_vp ~ lu_degree + percent_flocks, data = lu_plot, family = beta_family(link = "logit")) #-5.81655
glmmTMB(mean_vp ~ percent_flocks + lead_proportion, data = lu_plot, family = beta_family(link = "logit")) #-7.76460
glmmTMB(mean_vp ~ lu_degree + lead_proportion, data = lu_plot, family = beta_family(link = "logit")) #-7.65616
glmmTMB(mean_vp ~ lu_degree * percent_flocks, data = lu_plot, family = beta_family(link = "logit")) #-20.72776
glmmTMB(mean_vp ~ percent_flocks * lead_proportion, data = lu_plot, family = beta_family(link = "logit")) #-7.74139
glmmTMB(mean_vp ~ lu_degree * lead_proportion, data = lu_plot, family = beta_family(link = "logit")) #-7.86385
glmmTMB(mean_vp ~ lu_degree, data = lu_plot, family = beta_family(link = "logit")) #-3.34297
glmmTMB(mean_vp ~ percent_flocks, data = lu_plot, family = beta_family(link = "logit")) #-7.09244
glmmTMB(mean_vp ~ lead_proportion, data = lu_plot, family = beta_family(link = "logit")) #-9.45848
library(mgcv)
#==========================================================================================================================
# Model Selection
library(AICcmodavg)
library(glmulti)
s_full_model = glmmTMB(mean_vp ~ avg_group_size + lead_proportion + s_degree + percent_flocks +
avg_group_size:lead_proportion + avg_group_size:s_degree +
avg_group_size:percent_flocks + lead_proportion:s_degree +
lead_proportion:percent_flocks + s_degree:percent_flocks,
family = beta_family(link = "logit"), data = s_plot)
s_model_selection <- aictab(s_full_model)
# Get AIC-based model selection table
s_model_selection_table <- s_model_selection$tab
s_selection_result <- glmulti(y = "mean_vp", xr = c("avg_group_size", "lead_proportion", "s_degree", "percent_flocks"),
data = s_plot, intercept = F, level = 2, maxsize = 2, method = "h", crit = "aic", plotty = F,
family = "binomial")
get.models(s_selection_result, subset = "bestaic")
setwd("C:/Users/ronit/OneDrive/Desktop/Thesis stuff")
bird_data = read.csv("Namdapha_Flock_Data.csv", header = T)
library(igraph)
library(igraphdata)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(glmmTMB)
library(ggplot2)
library(ggplot2)
install.packages("ggplot2")
install.packages("scales")
install.packages("ggplot2")
library(scales)
detach("package:scales", unload = TRUE)
remove.packages("scales", lib="~/R/win-library/4.1")
install.packages("ggplot2")
update.packages(ask = FALSE)
install.packages("ggplot2")
